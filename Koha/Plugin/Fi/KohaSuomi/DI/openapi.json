{
  "/availability/biblios/{biblio_id}/articlerequest": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::AvailabilityController#biblio_article_request",
      "operationId": "articleRequestBiblioAvailabilityDI",
      "tags": ["items", "availability"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/biblio_id_pp" },
        { "$ref": "openapi/parameters.json#/patron_id_qp" },
        { "$ref": "openapi/parameters.json#/library_id_qp" },
        {
          "name": "limit_items",
          "in": "query",
          "description": "Check only first n available items.",
          "required": false,
          "type": "integer"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Article requet availability information for items of biblio.",
          "schema": {
            "type": "object",
            "properties": {
              "biblio_id": {
                "type": "integer",
                "description": "Record internal identifier"
              },
              "availability": {
                "type": "object",
                "properties": {
                  "available": {
                    "type": "boolean",
                    "description": "Availability status"
                  },
                  "confirmations": {
                    "$ref": "openapi/definitions.json#/availability~1reason"
                  },
                  "notes": {
                    "$ref": "openapi/definitions.json#/availability~1reason"
                  },
                  "unavailability": {
                    "$ref": "openapi/definitions.json#/availability~1reason"
                  }
                }
              },
              "items_availability": {
                "description": "Availability of each item in this biblio",
                "type": ["array", "null"],
                "items": {
                  "$ref": "openapi/definitions.json#/availability~1item"
                }
              }              
            }
          }
        },
        "400": {
          "description": "Missing or invalid parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "404": {
          "description": "Biblio not found",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "catalogue": "1"
        }
      }
    }
  },
  "/availability/biblios/{biblio_id}/hold": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::AvailabilityController#biblio_hold",
      "operationId": "holdBiblioAvailabilityDI",
      "tags": ["items", "availability"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/biblio_id_pp" },
        { "$ref": "openapi/parameters.json#/patron_id_qp" },
        { "$ref": "openapi/parameters.json#/library_id_qp" },
        {
          "name": "query_pickup_locations",
          "in": "query",
          "description": "Return available pickup location(s) for each item. 1 = yes, 0 or no parameter = no.",
          "required": false,
          "type": "integer"
        },
        {
          "name": "ignore_patron_holds",
          "in": "query",
          "description": "Ignore given patron's existing holds when calculating availability. 1 = yes, 0 or no parameter = no.",
          "required": false,
          "type": "integer"
        },
        {
          "name": "limit_items",
          "in": "query",
          "description": "Check only first n available items.",
          "required": false,
          "type": "integer"
        }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Hold availability information for items of biblio.",
          "schema": {
            "allOf": [
              { "$ref": "openapi/definitions.json#/availability~1biblio" },
              {
                "type": "object",
                "properties": {
                  "hold_queue_length": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              }
            ]
          }
        },
        "400": {
          "description": "Missing or invalid parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "404": {
          "description": "Biblio not found",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "catalogue": "1"
        }
      }
    }
  },
  "/availability/biblios/{biblio_id}/search": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::AvailabilityController#biblio_search",
      "operationId": "searchBiblioAvailabilityDI",
      "tags": ["items", "availability"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/biblio_id_pp" }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Availability information in search context for items of biblio.",
          "schema": {
            "$ref": "openapi/definitions.json#/availability~1biblio"
          }
        },
        "400": {
          "description": "Missing or invalid parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "404": {
          "description": "Biblio not found",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "catalogue": "1"
        }
      }
    }
  },
  "/availability/items/{item_id}/articlerequest": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::AvailabilityController#item_article_request",
      "operationId": "articleRequestItemAvailabilityDI",
      "tags": ["items", "availability"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/item_id_pp" },
        { "$ref": "openapi/parameters.json#/patron_id_qp" },
        { "$ref": "openapi/parameters.json#/library_id_qp" }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Article request availability information for specific item.",
          "schema": {
            "$ref": "openapi/definitions.json#/availability~1item"
          }
        },
        "400": {
          "description": "Missing or invalid parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "404": {
          "description": "Item not found",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "catalogue": "1"
        }
      }
    }
  },
  "/availability/items/{item_id}/checkout": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::AvailabilityController#item_checkout",
      "operationId": "checkoutItemAvailabilityDI",
      "tags": ["items", "availability"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/item_id_pp" },
        { "$ref": "openapi/parameters.json#/patron_id_qp" },
        { "$ref": "openapi/parameters.json#/library_id_qp" }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Checkout availability information for specific item.",
          "schema": {
            "$ref": "openapi/definitions.json#/availability~1item"
          }
        },
        "400": {
          "description": "Missing or invalid parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "404": {
          "description": "Item not found",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "catalogue": "1"
        }
      }
    }
  },
  "/availability/items/{item_id}/hold": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::AvailabilityController#item_hold",
      "operationId": "holdItemAvailabilityDI",
      "tags": ["items", "availability"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/item_id_pp" },
        { "$ref": "openapi/parameters.json#/patron_id_qp" },
        { "$ref": "openapi/parameters.json#/library_id_qp" },
        {
          "name": "query_pickup_locations",
          "in": "query",
          "description": "Return available pickup location(s) for each item. 1 = yes, 0 or no parameter = no.",
          "required": false,
          "type": "integer"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Hold availability information for specific item.",
          "schema": {
             "$ref": "openapi/definitions.json#/availability~1item"
          }
        },
        "400": {
          "description": "Missing or invalid parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "404": {
          "description": "Item not found",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "catalogue": "1"
        }
      }
    }
  },
  "/biblios/{biblio_id}/holdings": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::BiblioController#get_holdings",
      "operationId": "holdingsByBiblioDI",
      "tags": ["biblios", "holdings"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/biblio_id_pp" }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Holdings records for the given biblio record"
        },
        "500": {
          "description": "Internal error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "catalogue": "1"
        }
      }
    }
  },
  "/biblios/{biblio_id}/serialsubscriptions": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::BiblioController#get_serial_subscriptions",
      "operationId": "serialSubscriptionsByBiblioDI",
      "tags": ["biblios", "serials"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/biblio_id_pp" }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Serial subscriptions data for the given biblio record"
        },
        "404": {
          "description": "Biblio not found",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "catalogue": "1"
        }
      }
    }
  },
  "/patrons/{patron_id}": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::PatronController#get",
      "operationId": "getPatronDI",
      "tags": ["patrons"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/patron_id_pp" },
        {
          "name": "query_blocks",
          "in": "query",
          "description": "Return information about patron's blocks. 1 = yes, 0 or no parameter = no.",
          "required": false,
          "type": "integer"
        },
        {
          "name": "query_relationships",
          "in": "query",
          "description": "Return information about patron's guarantors or guarantees. 1 = yes, 0 or no parameter = no.",
          "required": false,
          "type": "integer"
        },
        {
          "name": "query_messaging_preferences",
          "in": "query",
          "description": "Return information about patron's messaging preferences. 1 = yes, 0 or no parameter = no.",
          "required": false,
          "type": "integer"
        },
        {
          "name": "query_permissions",
          "in": "query",
          "description": "Return information about patron's permissions. 1 = yes, 0 or no parameter = no.",
          "required": false,
          "type": "integer"
        },
        {
          "name": "query_messages",
          "in": "query",
          "description": "Return patron's messages. 1 = yes, 0 or no parameter = no.",
          "required": false,
          "type": "integer"
        }      
      ],
      "produces": [
          "application/json"
      ],
      "responses": {
        "200": {
          "description": "Patron and additional information",
          "schema": {
            "type": "object"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "404": {
          "description": "Patron not found",
          "schema": {
           "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "borrowers": "1"
        }
      }
    },
    "patch": {
      "x-mojo-to": "Fi::KohaSuomi::DI::PatronController#update",
      "operationId": "updatePatronDI",
      "tags": ["patrons"],
      "parameters": [
        {
          "$ref": "openapi/parameters.json#/patron_id_pp"
        },
        {
          "name": "body",
          "in": "body",
          "description": "A JSON object containing new information about existing patron",
          "required": true,
          "schema": {
            "$ref": "openapi/definitions/patron.json"
          }
        }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "A successfully updated patron",
          "schema": {
            "type": "object"
          }
        },
        "202": {
          "description": "Accepted and waiting for librarian verification",
          "schema": {
            "type": "object"
          }
        },
        "204": {
          "description": "No Content",
          "schema": {
            "type": "object"
          }
        },
        "400": {
          "description": "Bad parameter",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "404": {
          "description": "Resource not found",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "409": {
          "description": "Conflict in updating resource",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "borrowers": "1"
        }
      }
    }
  },
  "/patrons/{patron_id}/articlerequests": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::ArticleRequestController#list",
      "operationId": "listArticleRequestsDI",
      "tags": ["patrons", "articlerequests"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/patron_id_pp" }, 
        { "$ref": "openapi/parameters.json#/page" }, 
        { "$ref": "openapi/parameters.json#/per_page" }, 
        { "$ref": "openapi/parameters.json#/match" }, 
        { "$ref": "openapi/parameters.json#/order_by" }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "A list of article requests",
          "schema": {
            "type": "array",
            "items": { "type": "object" }
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Request not allowed",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "404": {
          "description": "Patron not found",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "borrowers": "1"
        }
      }
    },
    "post": {
      "x-mojo-to": "Fi::KohaSuomi::DI::ArticleRequestController#add",
      "operationId": "addArticleRequestDI",
      "tags": ["patrons", "articlerequests"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/patron_id_pp" }, 
        {
          "name": "body",
          "in": "body",
          "description": "A JSON object containing information about the new article request",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "biblio_id": {
                "description": "Biblio internal identifier",
                "type": "integer"
              },
              "item_id": {
                "description": "Item internal identifier",
                "type": "integer"
              },
              "library_id": {
                "description": "Pickup location",
                "type": ["string", "null"]
              },
              "title": {
                "description": "title information",
                "type": ["string", "null"]
              },
              "author": {
                "description": "author information",
                "type": ["string", "null"]
              },
              "volume": {
                "description": "volume information",
                "type": ["string", "null"]
              },
              "issue": {
                "description": "issue information",
                "type": ["string", "null"]
              },
              "date": {
                "description": "date information",
                "type": ["string", "null"]
              },
              "pages": {
                "description": "page information",
                "type": ["string", "null"]
              },
              "chapters": {
                "description": "chapter information",
                "type": ["string", "null"]
              },
              "patron_notes": {
                "description": "notes by patron related to this article request",
                "type": ["string", "null"]
              }
            }
          }
        }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "201": {
          "description": "Created article request",
          "schema": {
            "type": "object"
          }
        },
        "400": {
          "description": "Missing or wrong parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Request not allowed",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "404": {
          "description": "Patron not found",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "reserveforothers": "1"
        }
      }
    }
  },
  "/patrons/{patron_id}/articlerequests/{article_request_id}": {
    "put": {
      "x-mojo-to": "Fi::KohaSuomi::DI::ArticleRequestController#edit",
      "operationId": "editArticleRequestDI",
      "tags": ["articlerequests"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/patron_id_pp" }, 
        { "$ref": "openapi/parameters.json#/article_request_id_pp" }, 
        {
          "name": "body",
          "in": "body",
          "description": "A JSON object containing fields to modify",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "branchcode": {
                "description": "Pickup location",
                "type": "string"
              }
            }
          }
        }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Updated article request",
          "schema": {
            "type": "object"
          }
        },
        "400": {
          "description": "Missing or wrong parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Article request not allowed",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "404": {
          "description": "Article request not found",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "reserveforothers": "1"
        }
      }
    },
    "delete": {
      "x-mojo-to": "Fi::KohaSuomi::DI::ArticleRequestController#delete",
      "operationId": "deleteArticleRequestDI",
      "tags": ["articlerequests"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/patron_id_pp" }, 
        { "$ref": "openapi/parameters.json#/article_request_id_pp" }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Successful deletion",
          "schema": {
            "type": "object"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Cancellation forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "404": {
          "description": "Article request not found",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "reserveforothers": "1"
        }
      }
    }
  },
  "/patrons/{patron_id}/checkouts": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::PatronController#list_checkouts",
      "operationId": "listCheckoutsWithRenewabilityDI",
      "tags": ["patrons", "checkouts"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/patron_id_pp" }, 
        { "$ref": "openapi/parameters.json#/page" }, 
        { "$ref": "openapi/parameters.json#/per_page" }, 
        { "$ref": "openapi/parameters.json#/match" }, 
        { "$ref": "openapi/parameters.json#/order_by" },
        {
          "name": "checked_in",
          "in": "query",
          "description": "By default, current checkouts are returned, when this is true then checked in checkouts are returned as result.",
          "type": "boolean"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "A list of checkouts"
        },
        "403": {
          "description": "Access forbidden",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        },
        "404": {
          "description": "Patron not found",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "circulate": "circulate_remaining_permissions"
        }
      }
    }
  },
  "/patrons/{patron_id}/checkouts/history": {
    "delete": {
      "x-mojo-to": "Fi::KohaSuomi::DI::PatronController#purge_checkout_history",
      "operationId": "purgeCheckoutHistoryDI",
      "tags": ["patrons", "checkouts"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/patron_id_pp" }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "204": {
          "description": "Checkout history deleted successfully"
        },
        "401": {
          "description": "Authentication required",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        },
        "403": {
          "description": "Access forbidden",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        },
        "404": {
          "description": "Patron not found",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        },
        "500": {
          "description": "Internal error",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        },
        "503": {
          "description": "Under maintenance",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "circulate": "circulate_remaining_permissions"
        }
      }
    }
  },
  "/patrons/{patron_id}/messaging_preferences": {
    "put": {
      "x-mojo-to": "Fi::KohaSuomi::DI::PatronController#edit_messaging_preferences",
      "operationId": "editMessagingPreferencesDI",
      "description": "Modifies patron's messaging preferences. Please note that not all parameters defined in body object's documentation can actually be used for each message option due to dynamic configuration. Make a GET request for patron with query_messaging_preferences=1 first to see whether an option is configurable or if message transport type is available.",
      "x-koha-authorization": {
        "permissions": {
          "borrowers": "1"
        }
      },
      "tags": ["notices"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/patron_id_pp" }, 
        {
          "name": "body",
          "in": "body",
          "description": "A JSON object containing information on messaging preferences",
          "required": true,
          "schema": { "$ref" : "openapi/definitions/messagingpreference.json" }
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "A messaging preferences object",
          "schema": { "$ref" : "openapi/definitions/messagingpreference.json" }
        },
        "400": {
          "description": "Missing or wrong parameters",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        },
        "401": {
          "description": "Authentication required",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        },
        "403": {
          "description": "Access forbidden",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        },
        "404": {
          "description": "Patron or category not found",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        },
        "500": {
          "description": "Internal error",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        },
        "503": {
          "description": "Under maintenance",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        }
      }
    }
  },

  "/auth/patrons/validation": {
    "post": {
      "x-mojo-to": "Fi::KohaSuomi::DI::PatronController#validate_credentials",
      "operationId": "authValidatePatronCredentialsDI",
      "description": "Validates password for a patron identified by card number or user id.",
      "tags": ["patrons"],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "A password validation request",
          "schema": {
            "type": "object",
            "properties": {
              "cardnumber": {
                "description": "Card number for the patron",
                "type": "string"
              },
              "userid": {
                "description": "User login ID for the patron",
                "type": "string"
              },
              "password": {
                "description": "Password for the patron",
                "type": "string"
              }
            }
          }
        }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Patron information upon successful validation",
          "schema": {
            "type": "object"
          }
        },
        "400": {
          "description": "Bad parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "401": {
          "description": "Bad username/cardnumber and/or password",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {                
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "borrowers": "1"
        }
      }
    }
  }
}
